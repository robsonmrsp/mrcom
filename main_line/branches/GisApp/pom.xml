<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<!-- POM file generated with GWT webAppCreator -->
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.gis</groupId>
	<artifactId>GisApp</artifactId>
	<packaging>war</packaging>
	<version>1.0-SNAPSHOT</version>
	<name>com.gis.GisApp</name>

	<repositories>
		<!-- add JBOSS repository for easy access to Hibernate libraries -->
		<repository>
			<id>JBOSS</id>
			<url>http://repository.jboss.com/maven2</url>
		</repository>
		<repository>
			<id>JBOSS2</id>
			<url>https://repository.jboss.org/nexus/content/repositories/releases</url>
		</repository>
		
		<repository>
			<id>opennms</id>
			<url>http://repo.opennms.org/maven2</url>
		</repository>

		<repository>
			<id>maven</id>
			<name>central</name>
			<url>http://repo2.maven.org/maven2</url>
		</repository>
		<repository>
			<id>jahia</id>
			<name>jahiaMaven</name>
			<url>http://maven.jahia.org/maven2/</url>
		</repository>
		<!--Para uso do hibernate spatial (ABAIXO) -->
		<repository>
			<id>OSGEO GeoTools repo</id>
			<url>http://download.osgeo.org/webdav/geotools</url>
		</repository>
		<repository>
			<id>Hibernate Spatial repo</id>
			<url>http://www.hibernatespatial.org/repository</url>
		</repository>
		<!--Para uso do hibernate spatial (ACIMA) -->
	</repositories>
	<properties>
		<!-- Convenience property to set the GWT version -->
		<springVersion>3.0.5.RELEASE</springVersion>
		<hibernate.version>3.5.1-Final</hibernate.version>
		<gwtVersion>2.2.0</gwtVersion>

		<!-- GWT needs at least java 1.5 -->
		<maven.compiler.source>1.5</maven.compiler.source>
		<maven.compiler.target>1.5</maven.compiler.target>
	</properties>

	<dependencies>
		<!-- pool de conexoes injetado pelo spring na sessionFactory do Hibernte -->
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>

		<dependency>
			<groupId>com.extjs</groupId>
			<artifactId>gxt</artifactId>
			<version>2.2.3</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${springVersion}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${springVersion}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${springVersion}</version>
		</dependency>

		<!-- jsr 330 -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>1</version>
		</dependency>

		<!--PAra que o hibernate possa ser "injetdo pelo spring" -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${springVersion}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-beans</artifactId>
			<version>${springVersion}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${springVersion}</version>
		</dependency>

		<!--Para uso do hibernate Spatial (ABAIXO) -->
		<dependency>
			<groupId>org.hibernatespatial</groupId>
			<artifactId>hibernate-spatial-postgis</artifactId>
			<version>1.0</version>
		</dependency>
		<!--Para uso do hibernate Spatial (ACIMA) -->

		<!-- java.lang.ClassNotFoundException: org.aspectj.weaver.reflect.ReflectionWorld$ReflectionWorldException -->
		<dependency>
			<groupId>aspectj</groupId>
			<artifactId>aspectjtools</artifactId>
			<version>1.5.3</version>
		</dependency>
		<!-- the Postgis JDBC driver -->
		<dependency>
			<groupId>org.postgis</groupId>
			<artifactId>postgis-jdbc</artifactId>
			<version>1.5.0</version>
		</dependency>

		<!-- the postgresql driver -->
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<!-- Com essa linha abaixo, o arquivo de driver não foi copiado para a 
				pasta lib da aplicação, consequentemente o war não foi completo -->
			<!-- <scope>provided</scope> -->

			<version>8.4-701.jdbc3</version>
		</dependency>

		<!-- Hibernate uses slf4j for logging, for our purposes here use the simple 
			backend -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-simple</artifactId>
			<version>1.5.11</version>
		</dependency>

		<!-- Para uso das ANNOTATIONS do JPA (ABAIXO) -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-annotations</artifactId>
			<version>${hibernate.version}</version>
		</dependency>

		<!-- <dependency> -->
		<!-- <groupId>org.hibernate</groupId> -->
		<!-- <artifactId>hibernate-commons-annotations</artifactId> -->
		<!-- <version>3.3.0.ga</version> -->
		<!-- <version>${hibernate.version}</version> -->
		<!-- </dependency> -->

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.6.1</version>
		</dependency>
		<!-- Para uso das ANNOTATIONS do JPA (ABAIXO) -->

		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<version>${gwtVersion}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>com.google.gwt.google-apis</groupId>
			<artifactId>gwt-maps</artifactId>
			<version>1.1.0</version>
		</dependency>

		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>${gwtVersion}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-dev</artifactId>
			<version>${gwtVersion}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.4</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<!-- Generate compiled stuff in the folder used for developing mode -->
		<outputDirectory>src/main/webapp/WEB-INF/classes</outputDirectory>

		<plugins>

			<!-- GWT Maven Plugin -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<!-- JS is only needed in the package phase, this speeds up testing -->
				<executions>
					<execution>
						<phase>prepare-package</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>
				<!-- Plugin configuration. There are many available options, see gwt-maven-plugin 
					documentation at codehaus.org -->
				<configuration>
					<!-- URL that should be automatically opened in the GWT shell (gwt:run). -->
					<runTarget>GisApp.html</runTarget>
					<!-- Location of the develop-mode web application structure (gwt:run). -->
					<!-- <hostedWebapp>target/www</hostedWebapp> ### -->
					<hostedWebapp>src/main/webapp</hostedWebapp>
					<!-- Ask GWT to create the Story of Your Compile (SOYC) (gwt:compile) -->
					<soyc>true</soyc>
				</configuration>
			</plugin>

			<!-- Add source folders to test classpath in order to run gwt-tests as 
				normal junit-tests -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<additionalClasspathElements>
						<additionalClasspathElement>${project.build.sourceDirectory}</additionalClasspathElement>
						<additionalClasspathElement>${project.build.testSourceDirectory}</additionalClasspathElement>
					</additionalClasspathElements>
					<useManifestOnlyJar>false</useManifestOnlyJar>
					<forkMode>always</forkMode>

					<!-- Folder for generated testing stuff -->
					<systemProperties>
						<property>
							<name>gwt.args</name>
							<!-- src/main/webapp/WEB-INF/classes -->
							<!-- <value>-out target/www</value> -->
							<value>-out src/main/webapp</value>
						</property>
					</systemProperties>
				</configuration>
			</plugin>

			<!-- Copy static web files before executing gwt:run -->
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>target/www</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/webapp</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- Delete gwt generated stuff -->
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<configuration>
					<filesets>
						<fileset>
							<directory>src/main/webapp/gisapp</directory>
						</fileset>
						<fileset>
							<directory>src/main/webapp/WEB-INF/classes</directory>
						</fileset>
						<fileset>
							<directory>tomcat</directory>
						</fileset>
						<fileset>
							<directory>www-test</directory>
						</fileset>
						<fileset>
							<directory>.gwt-tmp</directory>
						</fileset>
					</filesets>
				</configuration>
			</plugin>

		</plugins>
	</build>
</project>


